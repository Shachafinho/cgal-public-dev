namespace CGAL {
/*!

\mainpage User Manual
\anchor Chapter_SetMovableSeparability2

\cgalAutoToc
\authors Shahar Shamai and Efi Fogel

\section sms_sec_intro Introduction

Problems of moving sets of objects, such as polygons in the plane and
polyhedra in three dimensions, without allowing collisions between the
objects are ubiquitous in many fields including motion planning,
computer graphics, VLSI layout, and manufacturing. One class of such
problems, referred to as <em>Movable Separability of Sets</em>
\cgalCite{t-mss-85}, considers the separability of sets of objects
under different kinds of motions and various definitions of
separation. The <em>moving sofa problem</em> or <em>sofa problem</em>
(see <a
href="https://en.wikipedia.org/wiki/Moving_sofa_problem">Moving sofa
problem</a> is a classic member of this class. It is a two-dimensional
idealisation of real-life furniture-moving problems; it asks for the
rigid two-dimensional shape of largest area \f$A\f$ that can be
maneuvered through an L-shaped planar region with legs of unit width
\cgalCite{w-sf-76}. The area \f$A\f$ thus obtained is referred to as
the sofa constant. The exact value of the sofa constant is an open
problem.  These problems become progressively more challenging as the
allowable separation motions becomes more complex (have more degrees
of freedom), the number of objects involved grows, or the shape of the
objects becomes more complicated.

\cgalFigureBegin{sms_2_fig_sofa_problem,sofa_problem.png} The
Hammersley sofa has area 2.2074 but is not the largest solution.
\cgalFigureEnd

\section sms_sec_casting Casting

Casting is a manufacturing process where liquid material is poured
into a cavity inside a mold, which has the shape of a desired
product. After the material solidifies, the product is pulled out of
the mold. Typically a mold is used to manufacture numerous copies of a
product. The challenge is design a proper mold, such that the solidified
product can be separated from its mold without breaking it.

This package provides a function called
`single_mold_translational_casting_2()` that given a simple closed
polygon \f$P\f$ it determines whether a cavity (of a mold in the
plane) that has the shape of \f$P\f$ can be used so that the polygon
\f$P\f$ could be pulled out of the mold without colliding into the
mold (but possibly sliding along the mold surface); see
\cgalFigureRef{sms_2_fig_mold} for an illustration. If the polygon
is <em>castable</em>, the function computes the set of top edges of
such cavities and the corresponding closed ranges of pull
directions. Assuming the top edge normal is parallel to the
\f$y\f$-axis, every direction in a range must have a positive
component in the positive \f$y\f$-direction.

\cgalFigureBegin{sms_2_fig_mold,mold.png}
Polygons (light grey) in their molds (darker grey) and valid pull-out
directions.
\cgalFigureEnd

The input polygon must satisfy two conditions as follows. First, it
has to be simple. Essentially, a simple polygon is topologically
equivalent to a disk; see Chapter \ref
Chapter_2D_Regularized_Boolean_Set-Operations "2D Regularized Boolean
Set-Operations" for the precise definition of simple
polygons. Secondly, not consecuitive three vertices can be linear. If
you suspect that the input polygon may not satisfy the latter
condition, pre-process the polygon to elliminate this ill-condition.

The implementation is based on an algorithm developed by Shamai and
Halperin; see \cgalCite{cgal:ss-spfis-16} for the generalization of
the algorithm to 3D. The time and space complexities are in \f$O(n)\f$
and \f$O(1)\f$, respectively. In order to ensure robustness and
correctness you are adviced to use a kernel that guarantees exact
constructions as well as exact predicates.

\cgalExample{Set_movable_separability_2/single_mold_translational_casting.cpp}

*/
} /* namespace CGAL */
